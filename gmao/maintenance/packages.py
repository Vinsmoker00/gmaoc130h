"""Job card packages defined by maintenance protocol SMP515."""
from __future__ import annotations

from typing import Dict, List

# Package definitions taken from SMP515 extracts supplied in the product brief.
# The keys use the VP shorthand so the dispatcher can match the selected visit type.
JOB_CARD_PACKAGES: Dict[str, List[str]] = {
    "A": [
        "A-16",
        "A-17",
        "A-18",
        "A-19",
        "A-20",
        "A-21",
        "A-22",
        "A-23",
        "A-24",
        "A-25",
        "A-26",
        "A-27",
        "A-28",
        "A-29",
        "A-30",
        "A-31",
        "A-32",
        "B-1",
        "B-12-01",
        "C-1",
        "C-54",
        "C-56",
        "C-58",
        "C-59",
        "C-60",
        "C-153",
        "C-194",
        "C-195",
        "C-196",
        "C-197",
        "C-426",
        "SP-6",
        "SP-106",
        "SP-132",
        "SP-146",
        "SP-334",
        "SP-340",
    ],
    "B": [
        "A-16",
        "A-17",
        "A-18",
        "A-19",
        "A-20",
        "A-21",
        "A-22",
        "A-23",
        "A-24",
        "A-25",
        "A-26",
        "A-27",
        "A-28",
        "A-29",
        "A-30",
        "A-31",
        "A-32",
        "B-1",
        "B-2",
        "B-3",
        "B-4",
        "B-5",
        "B-6",
        "B-7",
        "B-8",
        "B-9",
        "B-10",
        "B-11",
        "B-12-01",
        "B-17",
        "B-18",
        "B-19",
        "B-20",
        "B-21",
        "B-22",
        "B-23",
        "B-24",
        "B-25",
        "B-26",
        "B-27",
        "B-28",
        "B-31",
        "B-49",
        "B-50",
        "B-52",
        "B-53",
        "B-54",
        "B-55",
        "B-56",
        "B-57",
        "B-58",
        "B-59",
        "B-60",
        "B-62",
        "B-63",
        "B-65",
        "B-66",
        "B-67",
        "B-68",
        "B-69",
        "B-70",
        "B-71",
        "B-72",
        "B-73",
        "B-74",
        "B-75",
        "B-76",
        "B-77",
        "B-78",
        "C-1",
        "C-30",
        "C-31",
        "C-33",
        "C-35",
        "C-36",
        "C-38",
        "C-40",
        "C-41",
        "C-43",
        "C-45",
        "C-46",
        "C-48",
        "C-54",
        "C-56",
        "C-58",
        "C-59",
        "C-60",
        "C-110A",
        "C-118",
        "C-153",
        "C-194",
        "C-195",
        "C-196",
        "C-197",
        "C-229",
        "C-426",
        "SP-6",
        "SP-106",
        "SP-132",
        "SP-146",
        "SP-148",
        "SP-213",
        "SP-275",
        "SP-324",
        "SP-325",
        "SP-334",
        "SP-335",
        "SP-337",
        "SP-340",
    ],
    "C": [
        "A-16",
        "A-17",
        "A-18",
        "A-19",
        "A-20",
        "A-21",
        "A-22",
        "A-23",
        "A-24",
        "A-25",
        "A-26",
        "A-27",
        "A-28",
        "A-29",
        "A-30",
        "A-31",
        "A-32",
        "B-1",
        "B-2",
        "B-3",
        "B-4",
        "B-5",
        "B-6",
        "B-7",
        "B-8",
        "B-9",
        "B-10",
        "B-11",
        "B-12-01",
        "B-17",
        "B-18",
        "B-19",
        "B-20",
        "B-21",
        "B-22",
        "B-23",
        "B-24",
        "B-25",
        "B-26",
        "B-27",
        "B-28",
        "B-31",
        "B-49",
        "B-50",
        "B-52",
        "B-53",
        "B-54",
        "B-55",
        "B-56",
        "B-57",
        "B-58",
        "B-59",
        "B-60",
        "B-62",
        "B-63",
        "B-65",
        "B-66",
        "B-67",
        "B-68",
        "B-69",
        "B-70",
        "B-71",
        "B-72",
        "B-73",
        "B-74",
        "B-75",
        "B-76",
        "B-77",
        "B-78",
        "C-1",
        "C-2",
        "C-4",
        "C-5",
        "C-6",
        "C-7",
        "C-8",
        "C-9",
        "C-10",
        "C-11",
        "C-12",
        "C-14",
        "C-15",
        "C-20",
        "C-21",
        "C-22",
        "C-25",
        "C-27",
        "C-28",
        "C-29",
        "C-29A",
        "C-30",
        "C-31",
        "C-33",
        "C-34",
        "C-34A",
        "C-35",
        "C-36",
        "C-38",
        "C-39",
        "C-39A",
        "C-40",
        "C-41",
        "C-43",
        "C-44",
        "C-44A",
        "C-45",
        "C-46",
        "C-48",
        "C-49",
        "C-50",
        "C-51",
        "C-52",
        "C-53",
        "C-54",
        "C-56",
        "C-57",
        "C-58",
        "C-59",
        "C-60",
        "C-98",
        "C-99",
        "C-100",
        "C-101",
        "C-102",
        "C-103",
        "C-109",
        "C-110A",
        "C-112",
        "C-114",
        "C-115",
        "C-116",
        "C-117",
        "C-118",
        "C-119",
        "C-120",
        "C-121",
        "C-129",
        "C-133",
        "C-153",
        "C-177",
        "C-194",
        "C-195",
        "C-196",
        "C-197",
        "C-229",
        "C-275",
        "C-293",
        "C-297",
        "C-308",
        "C-309",
        "C-311",
        "C-312",
        "C-313",
        "C-320",
        "C-338",
        "C-342",
        "C-426",
        "C-428",
        "C-429",
        "C-430",
        "C-431",
        "C-432",
        "C-433",
        "C-434",
        "C-435",
        "C-436",
        "C-437",
        "C-438",
        "C-439",
        "C-448",
        "C-449",
        "SP-6",
        "SP-106",
        "SP-132",
        "SP-146",
        "SP-148",
        "SP-213",
        "SP-275",
        "SP-324",
        "SP-325",
        "SP-334",
        "SP-335",
        "SP-337",
        "SP-340",
    ],
    # D packages can be refined when the detailed SMP extracts are available.
    "D1": [],
    "D2": [],
}


def normalize_visit_type(value: str | None) -> str:
    """Normalize the visit type string used in forms."""
    if not value:
        return ""
    normalized = value.strip().upper()
    if normalized.endswith("-CHECK"):
        normalized = normalized.replace("-CHECK", "")
    if normalized.endswith(" CHECK"):
        normalized = normalized.replace(" CHECK", "")
    return normalized


def package_for_visit(vp_type: str | None) -> List[str]:
    """Return the configured package for the provided visit type."""
    key = normalize_visit_type(vp_type)
    return JOB_CARD_PACKAGES.get(key, [])
